#!/bin/sh


#
# SET VARIABLES
#
WD=`pwd`
SCRATCH="/scratch"
QUEUE="fredrickson"

NPROC=1
NODES=1
PPN=1

#
# PARSE ARGUMENTS
#
while [ $# -gt 0 ]
do
    case "$1" in
    (-*np) NPROC="$2"; shift;;
    (-*nodes) NODES="$2"; shift;;
    (-*ppn) PPN="$2"; shift;;
    (-*q) QUEUE="$2"; shift;;
    (-*charge) PBSOPTSS="-A $2" shift;;
    (-*f) FORCERENAME="1";;
    (-*emailwhendone) PBSOPTS="-m ae";;
    (-*) echo "Unrecognized Option $1" 1>&2; exit 1;;
    (*)  break;;
    esac
    shift
done

#
# CHECK FOR INPUT FILE
#
INPUTFILE=$2
if [ "$INPUTFILE" = "" ]
then
  echo "Usage: qnonlocal <abinit outfile> <_o_ base> <dtsetnum>"
  echo "Optional arguments:"
  echo " -np [number of cores]"
  echo " -nodes [number of total nodes]"
  echo " -ppn [cores per node]"
  echo " -q [Queue Name] (Run job in queue [Queue Name])"
  echo " -f (force a rename of existing output .log file)"
  echo " -emailwhendone (email you when job completes, requires .forward file in
 home directory)"
  echo " -charge [group,fund number] (charge to group and fund, please provide both)"
  exit 1
fi

if [ "$1" = "" ]
then
  echo "Usage: qnonlocal <abinit outfile> <_o_ base> <dtsetnum> <band number>"
  echo "Optional arguments:"
  echo " -np [number of cores]"
  echo " -nodes [number of total nodes]"
  echo " -ppn [cores per node]"
  echo " -q [Queue Name] (Run job in queue [Queue Name])"
  echo " -f (force a rename of existing output .log file)"
  echo " -emailwhendone (email you when job completes, requires .forward file in
 home directory)"
  echo " -charge [group,fund number] (charge to group and fund, please provide both)"
  exit 1
fi


OUTPUTFILE=${INPUTFILE%.?????}.cplog
JOBNAME=${INPUTFILE%.?????}

#
# PARSE AND SET NPROCS
#
if [ $NPROC -gt 20 ]
then
  if [ $NODES -eq 1 ]
    then
        echo "Please set number of nodes with the -nodes argument"
        exit
    fi
fi

PPN=$((NPROC/$NODES))
NPROC=$((PPN*$NODES))

if [ $NODES -gt 1 ]
then
	SCRATCH="/nfs/scratch"
fi


#
# SET PBS OPTIONS
#
OPTIONS="-o /dev/null -e /dev/null -q $QUEUE"
PBSOPTS="-N $JOBNAME -l nodes=$NODES:ppn=$PPN $PBSOPTS $PBSOPTSS"

#
# CREATE PBS INPUT FILE
#
TARGET=run.$$.sh

cat >> $TARGET << EOF
#!/bin/bash
#PBS $PBSOPTS

source /opt/intel/compilers_and_libraries_2017.1.132/linux/bin/compilervars.sh intel64
. /usr/mpi/openmpi_intel/2.0.1/bin/mpivars.sh 

cd $WD
mkdir -p $SCRATCH/\$PBS_JOBID

cat \`head -1 $INPUTFILE\` > $OUTPUTFILE

mpirun -n $NPROC ~/bin/nonlocal17 $1 $2 $3 0.000001 > $1_DS$3.nonlocal
sleep 3

rm -rf $SCRATCH/\$PBS_JOBID

EOF

# Submit the input file to PBS and clean up
qsub $OPTIONS $TARGET
rm $TARGET
